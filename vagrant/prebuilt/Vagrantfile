# -*- encoding: utf-8 -*- 
# ============LICENSE_START======================================================= 
# org.onap.vvp/engagementmgr
# ===================================================================
# Copyright © 2017 AT&T Intellectual Property. All rights reserved.
# ===================================================================
#
# Unless otherwise specified, all software contained herein is licensed
# under the Apache License, Version 2.0 (the “License”);
# you may not use this software except in compliance with the License.
# You may obtain a copy of the License at
#
#             http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
#
# Unless otherwise specified, all documentation contained herein is licensed
# under the Creative Commons License, Attribution 4.0 Intl. (the “License”);
# you may not use this documentation except in compliance with the License.
# You may obtain a copy of the License at
#
#             https://creativecommons.org/licenses/by/4.0/
#
# Unless required by applicable law or agreed to in writing, documentation
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# ============LICENSE_END============================================
#
# ECOMP is a trademark and service mark of AT&T Intellectual Property.
# -*- mode: ruby -*-
# # vi: set ft=ruby :
Vagrant.require_version ">= 1.6.0"
yaml_conf = YAML.load_file('config.yml')

Vagrant.configure("2") do |config|

  # always use Vagrant's insecure key
  config.ssh.insert_key = false

  # plugin conflict
  if Vagrant.has_plugin?("vagrant-vbguest") then
    config.vbguest.auto_update = false
  end

  yaml_conf["boxen"].each do |box|
    config.vm.define box["name"] do |conf|
      conf.vm.box = box["box"]
      conf.vm.box_version = ">= 1151.0.0"
      conf.vm.box_url = "http://stable.release.core-os.net/amd64-usr/current/coreos_production_vagrant.json"

      ["vmware_fusion", "vmware_workstation"].each do |vmware|
        conf.vm.provider vmware do |v, override|
          v.vmx['numvcpus'] = box["cpus"]
          v.vmx['memsize'] = box["memory"]
          v.gui = false

          override.vm.box_url = "http://%s.release.core-os.net/amd64-usr/current/coreos_production_vagrant_vmware_fusion.json" % $update_channel
        end # vmware
      end # override

      conf.vm.provider :virtualbox do |v|
        v.cpus = box["cpus"]
        v.gui = false
        v.memory = box["memory"]

        # On VirtualBox, we don't have guest additions or a functional vboxsf
        # in CoreOS, so tell Vagrant that so it can be smarter.
        v.check_guest_additions = false
        v.functional_vboxsf     = false
      end # v

      conf.vm.network :private_network, :ip => box["ips"][0]
      conf.vm.provision "ansible" do |ansible|
        ansible.extra_vars   = { hosts: yaml_conf["hosts"]}
        ansible.playbook     = "../../ansible/infrastructure.yml"
      end # ansible
    end # conf
  end # box
end # config
