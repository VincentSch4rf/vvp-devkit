# -*- encoding: utf-8 -*- 
# ============LICENSE_START======================================================= 
# org.onap.vvp/engagementmgr
# ===================================================================
# Copyright © 2017 AT&T Intellectual Property. All rights reserved.
# ===================================================================
#
# Unless otherwise specified, all software contained herein is licensed
# under the Apache License, Version 2.0 (the “License”);
# you may not use this software except in compliance with the License.
# You may obtain a copy of the License at
#
#             http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
#
# Unless otherwise specified, all documentation contained herein is licensed
# under the Creative Commons License, Attribution 4.0 Intl. (the “License”);
# you may not use this documentation except in compliance with the License.
# You may obtain a copy of the License at
#
#             https://creativecommons.org/licenses/by/4.0/
#
# Unless required by applicable law or agreed to in writing, documentation
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# ============LICENSE_END============================================
#
# ECOMP is a trademark and service mark of AT&T Intellectual Property.
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cms-uwsgi
spec:
  template:
    spec:
      imagePullSecrets:
      - name: onapkey
      containers:
      - name: cms-uwsgi
        image: {{container_uri}}cms:{{container_tag}}
        ports:
        - containerPort: 80
        - containerPort: 9000
        env:
        - name: ENVIRONMENT
          value: "{{ice_environment}}"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef: {name: cms-secret, key: key}
        - name: EMAIL_HOST
          value: "{{vault_email_host}}"
        - name: EMAIL_HOST_USER
          value: "{{vault_email_host_user}}"
        - name: EMAIL_PORT
          value: "{{email_port|default(25)}}"
        - name: EMAIL_HOST_PASSWORD
          valueFrom:
            secretKeyRef: {name: email-secret, key: password}
        - name: PGHOST
          value: postgresql
        - name: PGPORT
          value: "5432"
        - name: PGDATABASE
          value: "{{cms_postgresql_db|default('icecmsdb')}}"
        - name: PGUSER
          value: "{{vault_cms_postgresql_user}}"
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef: {name: postgresql-passwords, key: cmsPassword}
        - name: ICE_CONTACT_FROM_ADDRESS
          value: "{{vault_email_host_user}}"
        - name: CMS_NEVERCACHE_KEY
          valueFrom:
            secretKeyRef: {name: cms-secret, key: nevercache_key}
        - name: CMS_APP_USER
          valueFrom:
            secretKeyRef: {name: cms-secret, key: app_user}
        - name: CMS_APP_USER_MAIL
          valueFrom:
            secretKeyRef: {name: cms-secret, key: app_user_mail}
        - name: CMS_APP_USER_PASSWORD
          valueFrom:
            secretKeyRef: {name: cms-secret, key: app_user_password}
        - name: CMS_APP_CLIENT_ID
          valueFrom:
            secretKeyRef: {name: cms-secret, key: app_client_id}
        - name: CMS_APP_CLIENT_SECRET
          valueFrom:
            secretKeyRef: {name: cms-secret, key: app_client_secret}
        - name: STATIC_ROOT
          value: "/app/htdocs"
        - name: DJANGO_DEBUG_MODE
          value: "{{django_debug_mode}}"
        - name: S3_HOST
          value: "{{s3_dns_name}}"
        - name: S3_PORT
          value: "443"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef: {name: em-secret, key: aws_access_key_id}
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef: {name: em-secret, key: aws_secret_access_key}
{% if enable_liveness_probes %}
        livenessProbe:
          httpGet:
            path: /
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 10
{% endif %}
        command: ["/docker-entrypoint.sh", "/usr/local/bin/gunicorn", "-c", "/opt/configmaps/settings/gunicorn.ini", "cms.wsgi:application", {% if devenv is defined %}"--reload"{% endif %}]
        volumeMounts:
        - name: settings
          mountPath: /opt/configmaps/settings/
        - name: site-crt
          mountPath: /opt/secrets/site-crt/
{% if devenv is defined %}
        - name: cms-rsync
          mountPath: /srv
{% endif %}
      volumes:
      - name: settings
        configMap:
          name: cms-settings
      - name: site-crt
        secret:
          secretName: site-crt
{% if devenv is defined %}
      - name: cms-rsync
        hostPath:
          path: /var/devenv/rkt-ice-cms/django
{% endif %}
    metadata:
      labels:
        run: cms-uwsgi
